
import com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author User
 */
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
        show_user();
    }

    public ArrayList<User> userList() {
        ArrayList<User> usersList = new ArrayList<>();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/malldb", "root", "");
            String query1 = "SELECT * FROM shops";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            User user;
            while (rs.next()) {
                user = new User(rs.getInt("shopid"), rs.getString("shopname"), rs.getString("category"), rs.getInt("phonenumber"), rs.getInt("floor"), rs.getString("sales"), rs.getString("timings"));
                usersList.add(user);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return usersList;
        
    }

    public void show_user() {
        ArrayList<User> list = userList();
        DefaultTableModel model = (DefaultTableModel) jTable_Display_Shops.getModel();
        Object[] row = new Object[7];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getshopid();
            
            row[1] = list.get(i).getshopname();
            row[2] = list.get(i).getcategory();
            row[3] = list.get(i).getphonenumber();
            row[4] = list.get(i).getfloor();
            row[5] = list.get(i).getsales();
            row[6] = list.get(i).gettimings();
            model.addRow(row);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        pno = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Display_Shops = new javax.swing.JTable();
        reset = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        update = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        logout = new javax.swing.JButton();
        categorybtn = new javax.swing.JComboBox<>();
        floorbtn = new javax.swing.JComboBox<>();
        salesbtn = new javax.swing.JComboBox<>();
        timingsbtn = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));
        jPanel1.setForeground(new java.awt.Color(0, 102, 102));
        jPanel1.setPreferredSize(new java.awt.Dimension(1350, 700));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ShopId");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ShopName");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Catregory");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Shop phone number");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Shop floor");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Ongoing Sales");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Timings");

        jTable_Display_Shops.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "shopid", "shopname", "Category", "Phonenumber", "floor", "Sales", "Timings"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Display_Shops.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_Display_ShopsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Display_Shops);

        reset.setForeground(new java.awt.Color(255, 255, 255));
        reset.setText("Reset");
        reset.setBorderPainted(false);
        reset.setContentAreaFilled(false);
        reset.setDefaultCapable(false);
        reset.setFocusPainted(false);
        reset.setFocusable(false);
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.setBorderPainted(false);
        delete.setContentAreaFilled(false);
        delete.setDefaultCapable(false);
        delete.setFocusPainted(false);
        delete.setFocusable(false);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update");
        update.setBorderPainted(false);
        update.setContentAreaFilled(false);
        update.setDefaultCapable(false);
        update.setFocusPainted(false);
        update.setFocusable(false);
        update.setRequestFocusEnabled(false);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("Insert");
        save.setBorderPainted(false);
        save.setContentAreaFilled(false);
        save.setDefaultCapable(false);
        save.setFocusPainted(false);
        save.setFocusable(false);
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1350, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );

        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setText("Logout");
        logout.setBorderPainted(false);
        logout.setContentAreaFilled(false);
        logout.setDefaultCapable(false);
        logout.setFocusPainted(false);
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        categorybtn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-------------------", "Clothing", "Eating", "Electronics", "HomeDecors", "Life Style" }));
        categorybtn.setFocusable(false);
        categorybtn.setOpaque(false);

        floorbtn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", " " }));

        salesbtn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---------select sale--------", "Upto 50% off", "Upto 75% off", "Exchange offer", "Stock clearance sale", "Winter sale" }));

        timingsbtn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----------select timings-------", "9am-10pm", "9am-11pm", "10am-10pm", "10am-11pm", "11am-10pm", "11am-11pm", " " }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(logout)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(save)
                        .addGap(47, 47, 47)
                        .addComponent(update)))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reset))
                    .addComponent(name)
                    .addComponent(timingsbtn, 0, 175, Short.MAX_VALUE)
                    .addComponent(salesbtn, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(floorbtn, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pno)
                    .addComponent(categorybtn, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(id))
                .addGap(93, 93, 93)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logout)
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(categorybtn, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pno, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(floorbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(salesbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timingsbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(save)
                            .addComponent(update)
                            .addComponent(delete)
                            .addComponent(reset))))
                .addContainerGap(140, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        
        if(id.getText()=="" || name.getText()=="" || categorybtn.getSelectedItem()=="----------" || pno.getText()=="" ||floorbtn.getSelectedItem()=="----------"||salesbtn.getSelectedItem()=="----------"||timingsbtn.getSelectedItem()=="----------")
        {
             JOptionPane.showMessageDialog(null, "Plese enter all details");
             save.setEnabled(false);
        }
        try {
            save.setEnabled(true);
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/malldb", "root", "");
            String query = "insert into shops(shopid,shopname,category,phonenumber,floor,sales,timings)values(?,?,?,?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, id.getText());
            pst.setString(2, name.getText());
            String category;
            category=categorybtn.getSelectedItem().toString();
            pst.setString(3, category);
            pst.setString(4, pno.getText());
            String floor;
            floor=floorbtn.getSelectedItem().toString();
            pst.setString(5, floor);
            
            String ongoingsales;
            ongoingsales=salesbtn.getSelectedItem().toString();
            pst.setString(6, ongoingsales);
            
            String timings;
            timings=timingsbtn.getSelectedItem().toString();
            pst.setString(7, timings);
           pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel) jTable_Display_Shops.getModel();
            model.setRowCount(0);
            show_user();
            JOptionPane.showMessageDialog(null, "inserted sucessfully");
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "enter a valid shopid" );
        }catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        resetData();
    }//GEN-LAST:event_resetActionPerformed

    private void jTable_Display_ShopsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_Display_ShopsMouseClicked

        // TODO add your handling code here:
        int i = jTable_Display_Shops.getSelectedRow();
        TableModel model = jTable_Display_Shops.getModel();
        id.setText(model.getValueAt(i, 0).toString());
        name.setText(model.getValueAt(i, 1).toString());
        
       String category=model.getValueAt(i,2).toString();
        switch(category){
            case "Eating":
            categorybtn.setSelectedIndex(2);
            break;
            
            case "Clothing":
            categorybtn.setSelectedIndex(1);
            break;
            
            case "Electronics":
            categorybtn.setSelectedIndex(3);
            break;
            
            case "Lifestyle":
            categorybtn.setSelectedIndex(5);
            break;
            
            case "Homedecors":
            categorybtn.setSelectedIndex(4);
            break;
         }
       
        pno.setText(model.getValueAt(i, 3).toString());
        
        String floor=model.getValueAt(i,4).toString();
        switch(floor){
            case "0":
            floorbtn.setSelectedIndex(0);
            break;
            
            case "1":
            floorbtn.setSelectedIndex(1);
            break;
            
            case "2":
            floorbtn.setSelectedIndex(2);
            break;
            
            case "3":
            floorbtn.setSelectedIndex(3);
            break;
            
           
         }
        
         String sales=model.getValueAt(i,5).toString();
        switch(sales){
            case "Winter sale":
            salesbtn.setSelectedIndex(5);
            break;
            
            case "Upto 50% off":
            salesbtn.setSelectedIndex(1);
            break;
            
            case "Upto 75% off":
            salesbtn.setSelectedIndex(2);
            break;
            
            case "Exchange offer":
            salesbtn.setSelectedIndex(3);
            break;
            
            case "Stock clearance sale":
            salesbtn.setSelectedIndex(4);
            break;
          }


       String timings=model.getValueAt(i,6).toString();
        switch(timings){
            case "9am-10pm":
            timingsbtn.setSelectedIndex(1);
            break;
            
            case "9am-11pm":
            timingsbtn.setSelectedIndex(2);
            break;
            
            case "10am-10pm":
            timingsbtn.setSelectedIndex(3);
            break;
            
            case "11am-10pm":
            timingsbtn.setSelectedIndex(5);
            break;
            
            case "10am-11pm":
            timingsbtn.setSelectedIndex(4);
            break;
            
            case "11am-11pm":
            timingsbtn.setSelectedIndex(6);
            break;
          } 
        
        update.setEnabled(true);
        delete.setEnabled(true);
        save.setEnabled(false);
        
    }//GEN-LAST:event_jTable_Display_ShopsMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/malldb", "root", "");
            int row = jTable_Display_Shops.getSelectedRow();
            String value = (jTable_Display_Shops.getModel().getValueAt(row, 0).toString());
            String query = "UPDATE shops set shopid=?,shopname=?,category=?,phonenumber=?,floor=?,sales=?,timings=? where shopid=" + value;
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, id.getText());
            
            pst.setString(2, name.getText());
            String category;
            category=categorybtn.getSelectedItem().toString();
            pst.setString(3, category);
            pst.setString(4, pno.getText());
            
            String floor;
            floor=floorbtn.getSelectedItem().toString();
            pst.setString(5, floor);
            
            String ongoingsales;
            ongoingsales=salesbtn.getSelectedItem().toString();
            pst.setString(6, ongoingsales);
            
            String timings;
            timings=timingsbtn.getSelectedItem().toString();
            pst.setString(7, timings);
            pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel) jTable_Display_Shops.getModel();
            model.setRowCount(0);
            show_user();
            JOptionPane.showMessageDialog(null, "updated sucessfully");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        resetData();
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        String errorMessage = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/malldb", "root", "");
            int row = jTable_Display_Shops.getSelectedRow();
            String value = (jTable_Display_Shops.getModel().getValueAt(row, 0).toString());
            String query = "DELETE from shops where shopid=" + value;
            PreparedStatement pst = con.prepareStatement(query);
            pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel) jTable_Display_Shops.getModel();
            model.setRowCount(0);
            show_user();
            JOptionPane.showMessageDialog(null, "deleted sucessfully");
            
        } catch (MySQLIntegrityConstraintViolationException e) {
            errorMessage = e.getMessage();
            JOptionPane.showMessageDialog(null, e);
        } catch (ClassNotFoundException cnfe) {
            
        } catch (SQLException sqle) {
            
        } finally {
            
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed

        // TODO add your handling code here:
        Page1 page = new Page1();
        page.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_logoutActionPerformed

    private void resetData() {
        id.setText("");
        name.setText("");
        categorybtn.setSelectedIndex(0);
        pno.setText("");
        floorbtn.setSelectedIndex(0);
        salesbtn.setSelectedIndex(0);
        timingsbtn.setSelectedIndex(0);
        
        save.setEnabled(true);
        update.setEnabled(false);
        delete.setEnabled(false);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }
    
    
    private void Fillcombo(){
    try{
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/malldb", "root", "");
        String sql="select * from category ";
        PreparedStatement pst = con.prepareStatement(sql);
        pst.executeQuery();
        ResultSet rs=null;
        while(rs.next())
        {
            String name=rs.getString("category");
            categorybtn.addItem(name);
        }

}
catch(Exception e){


JOptionPane.showMessageDialog(null,e);

}
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> categorybtn;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> floorbtn;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Display_Shops;
    private javax.swing.JButton logout;
    private javax.swing.JTextField name;
    private javax.swing.JTextField pno;
    private javax.swing.JButton reset;
    private javax.swing.JComboBox<String> salesbtn;
    private javax.swing.JButton save;
    private javax.swing.JComboBox<String> timingsbtn;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
